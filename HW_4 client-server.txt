HW
Client_Server
1) Прочиать про клиент-серверную архитектуру
архитектура "клиент-сервер" состоит из клиента, сервера, базы данных.
Клиент это локальная машина через которую происходит отправка запроса к серверу.
Сервер это специалное системное оборудование(мощный компьютер) предназначеное для решения определенных задач, предоставляет пользователям доступ к определенным данным, хранит относительную небольшую инфориацию.
База данных это мощный компьютер имеющую огромный ресурс для хранения большого объема информации, снимая нагрузку с сервера.
Цепочка "клиент-сервер" работает по такому принцепу: пользовать используя локальную машину(клиент) делает запрос на получения какой-либо инфорамации серверу. Если эта информация хранится в сервере,то сервер отправляет результат запроса обратно клиенту. Если у сервера нет данной информации то сервер делает запрос по этой информации в базу данных,после база данных отправляет нужную информацию серверу,а тот отправляет клиенту. 

2) Что ткое HTTP и HTTPS
HTTP - это протокол для передачи информации, на базе которых работают все сайты.
HTTPS - это тот же протокол что и HTTP,только имеющий более сильную защиту данных, и используется на тех сайтах,где необходимо защитить персональные данные пользователя от взлома и кражи.

3) HTTP методы
методы HTTP:
GET - запрашивает представление ресурса, может только извлекать данные
HEAD - запрашивает как и метод GET, но без тела ответа
POST - отправка сущностей к определенному ресурсу, часто вызывает изменение состояния или какие-то побочные эффекты на сервере
PUT - заменяет все текущие представления ресурса данными запроса
DELETE - удаляет указанный ресурс
CONNECT - устанавливает "туннель" к серверу, определенному по ресурсу
OPTIONS - используется для описания параметров соединения с ресурсом
TRACE -  выполняет вызов возвращаемого тестового сообщения с ресурса
PATCH - используется для частичного изменения ресурса
 
4) HTTP статус коды сервера
коды статуса HTTP разделены на 5 классов:
1хх: информационные коды указвающие что запрос инициированный браузером продолжается
2хх: коды успешного запроса
200 - код возвращается когда веб-страница или ресурс действуют точно так как ожидается
3хх: коды перенаправления возвращаются когда запрошенный ресурс заменен новым
301 - этот код возвращается когда веб-страница или ресурс заменяется другим ресурсом. он используется для постоянного редиректа URL-адресов
302 - это HTTP-ошибка. этот код возвращается когда веб-страница или ресурс был найден но не в том месте где ожидалось. он используется для временного редиректа URL-адресов
304 - сообщается что ресурсы хранящиеся в кэше браузера не изменились. он используется для ускорение доставки веб-страницы за счет потворого исползования ранее загруженного ресурса
4хх: ошибки возникающие на стороне клиента иуказывающие на наличие проблем с запросом 
401 - возвращается сервером когда для доступа к целевому ресурсу отсутствует валидные учетные данные
403 - возвращается когда пользователь пытается открыть ресурс для которого у него нет права досутпа( например попытка просмотра неавторизованным пользователем контента защищенного паролем)
404 - означает что запрошенный ресурс не существует и сервер не знает сущестовал ли он когда-либо
405 - генерируется когда хостинг-сервер поддержиает полученный метод,но целевой ресурс отсуствует
406 - запрошенный ресурс способен генерировать только контент неприемлемый в соотвествии с заголовками Accept отправленными в запросе
408 - генерируется когда сервер прерывает обработку после истечения времени ожидания полного запроса от браузера
410 - запрошенный ресурс отсутсвует и не будет возвращен(указывает что данный статус ожидается на постоянной основе)
429 - генерируется когда пользователь отправил слишком много запросов в заданный промежуток времени
499 - возвращается когда клиент закрывает запрос пока NGINX все еще обрабатывает его
5хх: коды ошибок сервера указывающие что запрос был принят но ошибка на сервере не позволила выполнить его
500 - на сервере что-то пошло не так и запрошенный ресурс не был доставлен. этот код генерируется сторонними плагинами при сбоях PHP-кода или подключения к базе данных
501 - эта ошибка указвает на то что сервер не поддержимает функции необходимые для  выполнения запроса. ошибка почти всегда связана с самим сервером.
502 - означает что один из серверов получил неверный ответ от другого
503 - запрос не может быть обработан прямо сейчас(если сервер перегружен)
504 - возвращается когда в обработке запроса было задействовано два сервера и на первом сервере истекло время ожидания ответа от второго

5) Что такое ядро браузера 
ядро браузера или браузерный движок - это программа преобразующая содержимое веб-страницы(файлы HNML,XML, цифровые изображения и др.) и информацию о форматировании(в форматах CSS,XSL и т.д.) в интерактивное изображение форматированного содержимого на экране.

6) Какие браузеры какиие ядра используют
Gecko - FireFox
webkit - Safari
chromium/blink - Chrome, Microsoft Edge, Яндекс.Браузерб, Opera, Brave, Vivaldi
presto - Opera(до 2013)

7) Что такое API
API(Application Programming  Interface) - это специальный интерфейс который предназначен для взаимодействия разнх программ между собой.

8. Что такое ендпоинты
эндпоинт это некий тоннель который соединяет серверные процессы приложения с внешним интерфейсом.

9) URL (URI, URL, URN)
URL(Uniform Resource Locator) - это строка символов, которая используется для идентификации какого-либо ресурса, но только по его адресу, по его местоположению
URI(Uniform Resource Identifier) - это строка символов, которая используется для индетификации какого-либо ресурса по его адресу или по его имени, либо по тому и тому вместе
URN(Uniform Resource Name) - это строка символов, которая используется для индетификации какого-либо ресурса, но только по его имени

10) Идемпотентные HTTP методы
к идемпонтентным методам HTTP относят:
PUT
DELETE

11) Безопасные HTTP методы
к безопасным методам HTTP относят:
GET
HEAD
OPTIONS
TRACE
эти методы предназначены только для получения информации и не должны изменять состояние сервера.

12) Иденфикация, Аутентификация, Авторизация
индетификаия - это процедура, в результате выполнения которой для субъекта индетификации выявляется его индетификатор, однозначно определяющий этого субъекта в информационной системе.
аутентификация - это проверка подлинности предъявленного пользователем индетификатор.
авторизация - предоставление определенному лицу или группе лиц  прав на выполнение определенных действий; а также процесс проверки данных прав припопытке выполнения этих действий.
   
13) Что такое IP
IP - это протокол в функции которого входит корректность доставки сообщений по выбранному адресу.

14) Что такое октаты в DNS

15) Что такое порт, сколько портов у Linux сервера
сетевой порт - это механизм, с помощью которого операционная система определяет какой именно программе необходимо передать сетевой пакет.
65535

16) Уровни OSI
OSI(open system interconnection). всего 7 уровней сетевого взаимодействия:
1) физический
2)канальный уровень
3)сетевой уровень
4)транспортный уровень
5)сеансовый уровень
6)уровень представления
7)уровень приложений

17) Хедеры http запросов
HTTP headers - это строки в http-сообщении, содержащие разделенную двоеточием(:) пару имя-значение. 